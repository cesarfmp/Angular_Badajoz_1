Curso de Angular JS 1.x

https://github.com/alce65/Angular_Badajoz_1

1)Fundamentos
--> AngularJS

--> React.js

todomvc.com
comparativa

-----------------------------
Tripas son jquery
MEAN
MongoDB
ExpressJS
AngularJS
NodeJS
Es todo javascript
------------------------------------
https://www.madewithangular.com/
----------------------
Modulos para lo que necesitemos
angular-route.js
--------------
Programar con visual studio code
Extension Angular 1 Javscript de John Papa
Path Autocomplete para las rutas de los ficheros
--------------------
Fundamentos:
Directivas
Componentes
MVC
Aplicaciones SPA
Promueve el uso de patrones, test-unitarios (jasmin)
Se complementa con Bootstrap o Material Design
-------------------------------
Scope es el intermediario, objeto para que pueda accede tanto el controlador como la vista
$scope.name
---------------------
SPA =carga completa en una sola pagina, las vistas ya están todas cargadas
Ejemplo google docs
-----------------------
Directivas = ng-src, ng-class,...
Es para modificar/ampliar los elementos del DOM

Expresiones= es un lenguaje de plantillas

Controlador = Es un view-controller
Es todo lo ligado a la vista, lo demas al factory y al service

Modelo = representacion de los datos
Se define en el controlador o en el html

ng-init --> define el modelo de datos en la vista, no usar
--------------
Doble binding

html5 boilderplate extension para ahorrar codigo
-------------------------
Hola_mundo.html
-------------------------
Servidor local --> programas y caractreristicas --> añadir servicios
internet information services
Administrador de Internet Information Services
---------------------------------
canary.html
angular batarang
-------------------------
Git
https://git-scm.com/
Es un sistema de control de versiones distribuido
Comandos
git init
git add
git commit para confirmar una version
git checkout

repositorio remoto
---------------------
Nueva guía de estilo
Recomendaciones de como trabajar

github para copia en remoto
gitlab
bitbucker
-----------------
https://github.com/alce65/Angular_Badajoz/
----------------------
git --version

github desktop
para manejar github
--
https://github.com/cesarfmp/Angular_Badajoz_1
---
Gestor de paquetes
node js
https://nodejs.org/es/
usamos para npm, que es el gestor de libreria
--------------------------
npm init
Crea package.json
Guarda referencia de todo lo que haga falta
Instalamos con el npm el angular
npm install -s angular
-s es para que guarde incluya la dependencia del angular en el package.json

npm install -s bootstrap
Con @ se puede poner el numero de la version

npm install jquery

Si no existiera la carpeta node_modules
npm install
Nos instalan todo lo que ponga el fichero package.json
-------------------------------
Administrator de Internet Information Se
Añadimos un nuevo sitio
Luego habilitamos el examen de directorios
Le damos accceso a todos los usuarios
---------------------------
Habilitar el examen de directorios en el
----------
Esto para indra
npm config set proxy http://cfernandezmo:xxx@proxy.indra.es:8080
----------
ECMAScript 6
Elementos nuevos
----
Nueva forma a partir del 1.2 John Papa, guia de estilo
https://github.com/johnpapa/angular-styleguide
-----------------------
ECMAScript6 --> inicio 1.5
Es el lenguaje que interpreta el javascript
Aparecen:
Constante y variables
Funciones arrow
Template String
Valores por defecto
Clases
Modulos
Promesas

const y let para definir variables con ambito de existencia de bloque
-----------------------------
Promesas
Un objeto promesas representa un valorque todavia
hacerAlgoPromesa().then(function() { c

--------------------
Guia de estilo 1.5
https://github.com/
Aparecen los componentes
Es un template + 1 controller
Todo es por el estandar Web Components:
* Custom elements: nos permite definir nuevos elementos html
	Nos podemos crear los elementos que nos de la gana
* templates: sistema de plantillas nativas en el navegador
* shadow dom --> es un dom indepediente
* html imports --> carga de documentos html
-----------------------------
Dia 2
Forma actual de usar angular
Modulos son cajas para guardar cosas, son afuncionales

Nos vamos a definir varios modulos
Estructura de directorios por características o por menu:

app
  common
  product
  user
css
dist
img
lib

Estructuras por capas:
controllers
model
services

-------------------
Elementos nuevos:
module
|
controller
servicios
filtros
directivas
-----
Generadores de plantillas
Angular seed
https://github.com/angular/angular-seed
Clonamos y ejecutamos npm install
jasmin, karma y protractor --> para pruebas
Nos genera un par de vista

ngBoilerplate <---
https://github.com/ngbp/ngbp
Git clone, npm -g install grunt-cli karma bower,luego en nuestro repositorio local instalamos
Instala Bootstrap, 

Yeoman
http://yeoman.io/
Se instala desde la web
Va con Node.js
----
Directivas y compilacion
Compilador HTML
Son anotaciones de como se tiene que construir ese elemento del dom
Ej.- cuando encuentra ng-...
ng-model
....
Expresiones 
{{Dato}}
Operaciones aritmeticas {Dato+4}
{{"WW".toUpperCase()}} 
{{Dato==1?"Red":"Blue"}}
-------------
Iteaciones
ngRepeat --> iteraccion sobre un array
ng-if
------
Includes HTML
<div ng-include="include-me.html"></div>

<ng-include src="include-me.html">
----------
Mas directivas
ngBind
ngCloak --> se encarga del refresco
ngHide
ngShow
----------
Eventos
ngClick
ngDblclick
ngBlur
ngFocus
ngSubmit
ngMouseEnter
-------
Filtros de formato
Es para dar formato a la informacion que se muestra
------------
Internacionalizacion
npm install -s angular-i18n
--------------
filter
limitTo
order by

coleccion objeto
nombre
apellido
fecha
nacimiento


Elige el orden que deseas
Elige el genero literario todos
Campos a mostrar
pais
fecha de nacimiento
--------------------
Estilos
Manipular clases
ngClass se le pasa objeto con los nombres de la clase
<p ng-class="{positivo:total>=0,negativo:total<0}">
------------------------
Carga de ficheros dinamica, para que no salga imagenes incorrectas mediante se carga

<ng-src="images//{{fileName}}">

ng-href
Para crear un select: ngOptions
-------------------------------------
https://angular-ui.github.io/
https://angular-ui.github.io/bootstrap/
https://angular-ui.github.io/ui-calendar/
-----------------------------------
Funciones del controlador
--> inicializar variables ($onInit)
--> Creacion metodos que añaden funcionalidad al scope
No debe hacer:
--> Manipular el DOM --> elementos inyectables
--> Formatear la entrada --> tenemos los filtros
--> Incluir codigo repetido en diversos controladores --> se hace en los servicios
--> Intercambiar estado entre los controladores
------------------------
Elementos inyectables como dependencias
Hay 5 tipos:
constant --> son servicios que proporcinan valores constantes
value --> son servicios que proporcinan valores, crea una variable global que es accesible en aquellos elementos en los cuales inyecto ese servicio

service: Servicios
factory: Factorias
provider: Proveedores

Estos elementos pueden tener funciones. Son objetos javascript y de tipo singletons
Angular permite añadir otros metodos a los servicios

angular.module('appModule').controller('MainCtrl', ["$scope",'<Service>'],
	function($scope,<Service>) {

Servicio$log que sustituye al console.log

angular.module('appModule').controller('MainCtrl', ["$scope",'$log'],
	function($scope,$log) {


$locale
Es para cambiar el idioma
$locale.id="es-es";
-------------------------------------------------
Angular Local-Storage
Ejemplo de como usar un servicio externo
Cookies y sessionStorage
Para guardar informacion local de forma segura
Es mejor que las cookies
localStorage

https://github.com/grevory/angular-local-storage
Lo ha metido

npm install -s angular-local-storage
Hay que configurar config y room
El provider es el que genera el servicio que es el que lo configura
Servicio se puede invocar pero si no hay que configurarlo

angular.module("appModule")
.config(['localStorageServiceProvider', 	function(localStorageServiceProvider) {
    localStorageServiceProvider.setPrefix('ls')
  }])













